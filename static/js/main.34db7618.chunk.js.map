{"version":3,"sources":["components/ThemeToggle/ThemeToggle.styles.tsx","redux/themeActions.tsx","utils/Themes.styles.tsx","components/ThemeToggle/ThemeToggle.tsx","components/Header/Header.tsx","components/Link/Link.styles.tsx","components/Link/Link.tsx","utils/Global.styles.tsx","components/Header/Header.styles.tsx","perfil.png","App.tsx","reportWebVitals.ts","redux/themeReducer.tsx","index.tsx"],"names":["ToggleButton","styled","button","theme","components","toggle","background","color","APPLY_THEME","applyTheme","type","payload","DarkTheme","name","header","height","width","link","textDecoration","LightTheme","ThemeToggle","dispatch","useDispatch","useSelector","state","onClick","Header","style","display","A","a","Link","href","content","GlobalStyle","createGlobalStyle","Container","p","App","src","Malc","alt","padding","border","borderRadius","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","Actions","Object","assign","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"gMAEaA,EAAeC,IAAOC,OAAV,8HAET,qBAAGC,MAAkBC,WAAWC,OAAOC,cAC5C,qBAAGH,MAAkBC,WAAWC,OAAOE,S,OCHrCC,EAAc,cAEdC,EAAa,SAACN,GACzB,MAAO,CACLO,KAAMF,EACNG,QAASR,ICLAS,EAAmB,CAC9BC,KAAM,OACNT,WAAY,CACVU,OAAQ,CACNC,OAAQ,OACRC,MAAO,OACPV,WAAY,UACZC,MAAO,QAETF,OAAQ,CACNC,WAAY,UACZC,MAAO,QAETU,KAAM,CACJV,MAAO,UACPW,eAAgB,UAKTC,EAAoB,CAC/BN,KAAM,QACNT,WAAY,CACVU,OAAQ,CACNC,OAAQ,OACRC,MAAO,OACPV,WAAY,OACZC,MAAO,QAETF,OAAQ,CACNC,WAAY,OACZC,MAAO,WAETU,KAAM,CACJV,MAAO,UACPW,eAAgB,U,OCnBPE,EAZK,WAClB,IAAMC,EAAWC,cACXnB,EAAQoB,aAAY,SAACC,GAAD,OAAgBA,EAAMrB,SAOhD,OAAO,cAACH,EAAD,CAAcyB,QALK,WACL,UAAftB,EAAMU,KAAkBQ,EAASZ,EAAWG,IAC3CS,EAASZ,EAAWU,KAGpB,oBCAMO,EAVA,WACb,OACE,mCACE,qBAAKC,MAAO,CAAEC,QAAS,QAAvB,SACE,cAAC,EAAD,S,QCNKC,EAAI5B,IAAO6B,EAAV,8GACH,qBAAG3B,MAAkBC,WAAWa,KAAKV,SAC3B,qBAAGJ,MAAkBC,WAAWa,KAAKC,kBCS3Ca,EANe,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAAR,yCAC5B,cAACJ,EAAD,CAAGG,KAAMA,EAAT,SACGC,KCRQC,EAAcC,YAAH,46BCCXC,EAAYnC,IAAOa,OAAV,8LACV,qBAAGX,MAAkBC,WAAWU,OAAOC,UACxC,qBAAGZ,MAAkBC,WAAWU,OAAOE,SACvC,qBAAGb,MAAkBC,WAAWU,OAAOP,SAClC,qBAAGJ,MAAkBC,WAAWU,OAAOR,cCPxC,GDcUL,IAAOoC,EAAV,gCCdP,IAA0B,oCCuC1BC,EA9BH,WACV,IAAMnC,EAAQoB,aAAY,SAACC,GAAD,OAAgBA,EAAMrB,SAChD,OACE,mCACE,eAAC,IAAD,CAAeA,MAAOA,EAAtB,UACE,cAAC+B,EAAD,IACA,cAAC,EAAD,IACA,eAACE,EAAD,WACE,8BACE,qBACEG,IAAKC,EACLC,IAAI,GACJ1B,OAAO,MACPC,MAAM,MACNW,MAAO,CACLe,QAAS,EACTC,OAAQ,oBACRC,aAAc,QACdtC,WAAY,WAIlB,+DAEF,cAAC,EAAD,CAAM0B,KAAK,sCAAsCC,QAAQ,YCnBlDY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCNRQ,EAAe,CACnBnD,MAAOgB,GCMHoC,EAAQC,aDHc,WAA6C,IAA5ChC,EAA2C,uDAA9B8B,EAAcG,EAAgB,uCACtE,OAAQA,EAAO/C,MACb,KAAKgD,EACH,OAAOC,OAAOC,OAAO,GAAI,CAAEzD,MAAOsD,EAAO9C,UAC3C,QACE,OAAOa,MCAbqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,SAM1BpB,EAAgBqB,QAAQC,O","file":"static/js/main.34db7618.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const ToggleButton = styled.button`\r\n  margin-left: auto;\r\n  background: ${({ theme }) => theme.components.toggle.background};\r\n  color: ${({ theme }) => theme.components.toggle.color};\r\n  border-radius: 5px;\r\n  outline: none;\r\n`","import { Theme } from '../utils/interfaces/Theme'\r\n\r\nexport const APPLY_THEME = 'APPLY_THEME'\r\n\r\nexport const applyTheme = (theme: Theme) => {\r\n  return {\r\n    type: APPLY_THEME,\r\n    payload: theme\r\n  }\r\n}","import { Theme } from './interfaces/Theme'\r\n\r\nexport const DarkTheme: Theme = {\r\n  name: 'Dark',\r\n  components: {\r\n    header: {\r\n      height: '50vh',\r\n      width: '100%',\r\n      background: '#252323',\r\n      color: '#fff',\r\n    },\r\n    toggle: {\r\n      background: '#ff3939',\r\n      color: '#fff',\r\n    },\r\n    link: {\r\n      color: '#ff3939',\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n}\r\n\r\nexport const LightTheme: Theme = {\r\n  name: 'Light',\r\n  components: {\r\n    header: {\r\n      height: '50vh',\r\n      width: '100%',\r\n      background: '#fff',\r\n      color: '#000',\r\n    },\r\n    toggle: {\r\n      background: '#fff',\r\n      color: '#ff3939',\r\n    },\r\n    link: {\r\n      color: '#ff3939',\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n}\r\n","import * as React from 'react'\r\nimport { ToggleButton } from './ThemeToggle.styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { applyTheme } from '../../redux/themeActions'\r\nimport { DarkTheme, LightTheme } from '../../utils/Themes.styles'\r\n\r\nconst ThemeToggle = () => {\r\n  const dispatch = useDispatch()\r\n  const theme = useSelector((state: any) => state.theme)\r\n\r\n  const handleThemeChange = () => {\r\n    if (theme.name === 'Light') dispatch(applyTheme(DarkTheme))\r\n    else dispatch(applyTheme(LightTheme))\r\n  }\r\n\r\n  return <ToggleButton onClick={handleThemeChange}>Theme</ToggleButton>\r\n}\r\n\r\nexport default ThemeToggle\r\n","import * as React from 'react'\r\nimport ThemeToggle from '../ThemeToggle/ThemeToggle'\r\n\r\nconst name = 'Michael Anthony Leal Costa'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex' }}>\r\n        <ThemeToggle />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\nimport { device } from '../../utils/mediaQueries.styles'\r\n\r\nexport const A = styled.a`\r\n  color: ${({ theme }) => theme.components.link.color};\r\n  text-decoration: ${({ theme }) => theme.components.link.textDecoration};\r\n  font-size: 5vh;\r\n  text-align: center;\r\n`","import * as React from 'react'\r\nimport { A } from './Link.styles'\r\n\r\ninterface Links {\r\n  href: any\r\n  content: any\r\n}\r\n\r\nconst Link: React.FC<Links> = ({href, content, ...args}) => (\r\n  <A href={href}>\r\n    {content}\r\n  </A>\r\n)\r\n\r\nexport default Link\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nhtml,\r\nbody {\r\n  font-family: Poppins;\r\n  background: #252323;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n    monospace;\r\n}\r\n\r\n.App {\r\n  text-align: center;\r\n}\r\n\r\n.App-logo {\r\n  height: 40vmin;\r\n  pointer-events: none;\r\n}\r\n\r\n@media (prefers-reduced-motion: no-preference) {\r\n  .App-logo {\r\n    animation: App-logo-spin infinite 20s linear;\r\n  }\r\n}\r\n\r\n.App-header {\r\n  background: #282c34;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(10px + 2vmin);\r\n  color: white;\r\n}\r\n\r\n.App-link {\r\n  color: #ff3939;\r\n}\r\n\r\n@keyframes App-logo-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n`\r\n","import styled from 'styled-components'\r\nimport { device } from '../../utils/mediaQueries.styles'\r\n\r\nexport const Container = styled.header`\r\n  height: ${({ theme }) => theme.components.header.height};\r\n  width: ${({ theme }) => theme.components.header.width};\r\n  color: ${({ theme }) => theme.components.header.color};\r\n  background: ${({ theme }) => theme.components.header.background};\r\n  text-align: center;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  display: flex;\r\n`\r\n\r\nexport const Paraghaph = styled.p`\r\n  \r\n`\r\n\r\n","export default __webpack_public_path__ + \"static/media/perfil.1082b5d7.png\";","import * as React from 'react'\r\nimport Header from './components/Header/Header'\r\nimport Link from './components/Link/Link'\r\nimport { GlobalStyle } from './utils/Global.styles'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\nimport { Container } from './components/Header/Header.styles'\r\nimport Malc from './perfil.png'\r\n\r\nconst App = () => {\r\n  const theme = useSelector((state: any) => state.theme)\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <Header />\r\n        <Container>\r\n          <div>\r\n            <img\r\n              src={Malc}\r\n              alt=''\r\n              height='180'\r\n              width='180'\r\n              style={{\r\n                padding: 0,\r\n                border: '5px solid #ff3939',\r\n                borderRadius: '360px',\r\n                background: 'red',\r\n              }}\r\n            />\r\n          </div>\r\n          <h1>Michael Anthony Leal Costa</h1>\r\n        </Container>\r\n        <Link href='mailto:michael.leal.costa@gmail.com' content='@' />\r\n      </ThemeProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as Actions from './themeActions'\r\nimport { LightTheme } from '../utils/Themes.styles'\r\n\r\nconst initialState = {\r\n  theme: LightTheme,\r\n}\r\n\r\nexport const themeReducer = (state: any = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case Actions.APPLY_THEME:\r\n      return Object.assign({}, { theme: action.payload })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { DarkTheme, LightTheme } from './utils/Themes.styles'\r\nimport { createStore } from 'redux'\r\nimport { themeReducer } from './redux/themeReducer'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = createStore(themeReducer)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log)\r\n"],"sourceRoot":""}